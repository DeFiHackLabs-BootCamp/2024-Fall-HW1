name: Autograding Tests
"on":
    - push
    - repository_dispatch
permissions:
    checks: write
    actions: read
    contents: read
jobs:
    run-autograding-tests:
        runs-on: ubuntu-latest
        if: github.actor != 'github-classroom[bot]'
        steps:
            - name: Code Verification
              uses: actions/checkout@v4
            - name: Foundry Installation
              uses: foundry-rs/foundry-toolchain@v1
              with:
                  version: nightly
            - name: Forge Installation
              run: |
                  cd hw
                  forge install
              id: test

            - name: Problem 1
              id: problem-1
              uses: classroom-resources/autograding-command-grader@v1
              with:
                  test-name: Problem 1
                  command: cd hw && forge test --mt testTransferAcrossMultipleEOA
                  timeout: 10
                  max-score: 80

            - name: Problem 2
              id: problem-2
              uses: classroom-resources/autograding-command-grader@v1
              with:
                  test-name: Problem 2
                  # we use public rpc url for testing
                  command: cd hw && forge test --mt testIsResister -f https://ethereum-sepolia-rpc.publicnode.com
                  timeout: 30
                  max-score: 10

            - name: Problem 3
              id: problem-3
              uses: classroom-resources/autograding-command-grader@v1
              with:
                  test-name: Problem 3
                  # we use public rpc url for testing
                  command: cd hw && forge test --mt testIsSignIn -f https://ethereum-sepolia-rpc.publicnode.com
                  timeout: 30
                  max-score: 10

            ## Modify Autograding Reporter
            ## If new problems are added, remember to add new grading actions below
            - name: Autograding Reporter
              uses: classroom-resources/autograding-grading-reporter@v1
              env:
                  PROBLEM-1_RESULTS: "${{steps.problem-1.outputs.result}}"
                  PROBLEM-2_RESULTS: "${{steps.problem-2.outputs.result}}"
                  PROBLEM-3_RESULTS: "${{steps.problem-3.outputs.result}}"
              with:
                  runners: problem-1, problem-2, problem-3
